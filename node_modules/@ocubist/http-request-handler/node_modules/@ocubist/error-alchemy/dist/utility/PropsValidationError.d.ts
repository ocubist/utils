import { ZodError, z } from "zod";
export declare const ZodErrorValidationDetails: z.ZodObject<{
    path: z.ZodString;
    msg: z.ZodString;
}, "strip", z.ZodTypeAny, {
    path: string;
    msg: string;
}, {
    path: string;
    msg: string;
}>;
export type ZodErrorValidationDetails = z.infer<typeof ZodErrorValidationDetails>;
export declare const extractZodErrorValidationDetails: (zod: ZodError) => ZodErrorValidationDetails[];
export declare const stringifyZodErrorValidationDetails: (validationDetails: ZodErrorValidationDetails[]) => string;
export declare class AlchemyPropsValidationError extends Error {
    zodError: ZodError;
    constructor(zodError: ZodError);
}
//# sourceMappingURL=PropsValidationError.d.ts.map